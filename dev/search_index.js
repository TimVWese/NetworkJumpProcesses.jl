var documenterSearchIndex = {"docs":
[{"location":"#NetworkJumpProcesses.jl","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jl","text":"","category":"section"},{"location":"","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jl","text":"Documentation for NetworkJumpProcesses.jl","category":"page"},{"location":"","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jl","text":"ConstantJumpVertex(rate, affect!)\nVariableJumpVertex(rate, affect!)\nConstantJumpEdge(rate, affect!)\nVariableJumpEdge(rate, affect!)\nnetwork_jump_set(graph; vertex_reactions::Vector{T}=Vector{NetworkJumpProcesses.JumpVertex}(), edge_reactions::Vector{U}=Vector{NetworkJumpProcesses.JumpEdge}()) where {T <: NetworkJumpProcesses.JumpVertex, U <: NetworkJumpProcesses.JumpEdge}\nvartojumps(graph, nb_vertex_states, nb_vertex_reacs, nb_edge_reacs)\njumptovars(graph, nb_vertex_states, nb_vertex_reacs, nb_edge_reacs)","category":"page"},{"location":"#NetworkJumpProcesses.network_jump_set-Union{Tuple{Any}, Tuple{U}, Tuple{T}} where {T<:JumpVertex, U<:JumpEdge}","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.network_jump_set","text":"network_jump_set(graph; vertex_reactions::Vector{T}=Vector{JumpVertex}(), edge_reactions::Vector{U}=Vector{JumpEdge}()) where {T <: JumpVertex, U <: JumpEdge}\n\nConstruct a JumpSet from a Graph and a list of JumpVertex and JumpEdge reactions.\n\nSee also: ConstantJumpVertex, ConstantJumpEdge, VariableJumpVertex, VariableJumpEdge\n\n\n\n\n\n","category":"method"},{"location":"#NetworkJumpProcesses.vartojumps-NTuple{4, Any}","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.vartojumps","text":"vartojumps(graph, nb_vertex_states, nb_vertex_reacs, nb_edge_reacs)\n\nCreate a dependency graph that maps the vertex states to the vertex and edge reactions. This graph can be used for the RSSA and RSSACR aggregators.\n\nSee also: jumptovars, Jump Aggregators Requiring Dependency Graphs \n\n\n\n\n\n","category":"method"},{"location":"#NetworkJumpProcesses.jumptovars-NTuple{4, Any}","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jumptovars","text":"jumptovars(graph, nb_vertex_states, nb_vertex_reacs, nb_edge_reacs)\n\nCreate a dependency graph that maps the vertex and edge reactions to the vertex states. This graph can be used for the RSSA and RSSACR aggregators.\n\nSee also: vartojumps, Jump Aggregators Requiring Dependency Graphs \n\n\n\n\n\n","category":"method"}]
}
