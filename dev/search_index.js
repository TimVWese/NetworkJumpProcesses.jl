var documenterSearchIndex = {"docs":
[{"location":"#NetworkJumpProcesses.jl","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jl","text":"","category":"section"},{"location":"","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jl","text":"Documentation for NetworkJumpProcesses.jl","category":"page"},{"location":"","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jl","text":"Modules = [NetworkJumpProcesses]","category":"page"},{"location":"#NetworkJumpProcesses.ConstantJumpEdge","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.ConstantJumpEdge","text":"ConstantJumpEdge(rate, affect!)\n\nConstruct a constant rate jump over an edge with rate rate and affect! methods.\n\nArguments\n\nrate::Function: signature (v, nhgbs, p, t) -> Real\naffect!::Function: signature (vn, v, nghbs, p, t) -> nothing\n\nSee also: Types of Jumps\n\n\n\n\n\n","category":"type"},{"location":"#NetworkJumpProcesses.ConstantJumpVertex","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.ConstantJumpVertex","text":"ConstantJumpVertex(rate, affect!)\n\nConstruct a constant rate jump vertex with rate rate and affect! methods.\n\nArguments\n\nrate::Function: signature (v, nhgbs, p, t) -> Real\naffect!::Function: signature (vn, v, nghbs, p, t)\n\nSee also: Types of Jumps\n\n\n\n\n\n","category":"type"},{"location":"#NetworkJumpProcesses.VariableJumpEdge","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.VariableJumpEdge","text":"VariableJumpEdge(rate, affect!)\n\nConstruct a variable rate jump over an edge with rate rate and affect! methods.\n\nArguments\n\nrate::Function: signature (vs, vd, p, t) -> Real\naffect!::Function: signature (vs, vd, nghbs, p, t) -> nothing\n\nSee also: Types of Jumps\n\n\n\n\n\n","category":"type"},{"location":"#NetworkJumpProcesses.VariableJumpVertex","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.VariableJumpVertex","text":"VariableJumpVertex(rate, affect!)\n\nConstruct a variable rate jump vertex with rate rate and affect! methods.\n\nArguments\n\nrate::Function: signature (v, nhgbs, p, t) -> Real\naffect!::Function: signature (vn, v, nghbs, p, t) -> nothing\n\nSee also: Types of Jumps\n\n\n\n\n\n","category":"type"},{"location":"#NetworkJumpProcesses.jumptovars","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.jumptovars","text":"jumptovars(graph, nb_vertex_reacs, nb_edge_reacs, nb_vertex_states=1)\n\nCreate a dependency graph that maps the vertex and edge reactions to the vertex states. This graph can be used for the RSSA and RSSACR aggregators.\n\nSee also: vartojumps, Jump Aggregators Requiring Dependency Graphs \n\n\n\n\n\n","category":"function"},{"location":"#NetworkJumpProcesses.network_jump_set-Union{Tuple{Any}, Tuple{U}, Tuple{T}} where {T<:JumpVertex, U<:JumpEdge}","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.network_jump_set","text":"network_jump_set(graph; vertex_reactions::Vector{T}=Vector{JumpVertex}(), edge_reactions::Vector{U}=Vector{JumpEdge}()) where {T <: JumpVertex, U <: JumpEdge}\n\nConstruct a JumpSet from a Graph and a list of JumpVertex and JumpEdge reactions.\n\nSee also: ConstantJumpVertex, ConstantJumpEdge, VariableJumpVertex, VariableJumpEdge\n\n\n\n\n\n","category":"method"},{"location":"#NetworkJumpProcesses.vartojumps","page":"NetworkJumpProcesses.jl","title":"NetworkJumpProcesses.vartojumps","text":"vartojumps(graph, nb_vertex_reacs, nb_edge_reacs, nb_vertex_states=1)\n\nCreate a dependency graph that maps the vertex states to the vertex and edge reactions. This graph can be used for the RSSA and RSSACR aggregators.\n\nSee also: jumptovars, Jump Aggregators Requiring Dependency Graphs \n\n\n\n\n\n","category":"function"}]
}
